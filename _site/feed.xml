<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>brianbancroft.ca</title>
    <description>Web and Desktop Development, Calculations, Dataviz, Logic. This is a</description>
    <link>brianbancroft.github.io/</link>
    <atom:link href="brianbancroft.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 17 Jun 2016 15:47:08 -0400</pubDate>
    <lastBuildDate>Fri, 17 Jun 2016 15:47:08 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>My Bookmark List</title>
        <description>&lt;h1 id=&quot;lets-learn-new-things&quot;&gt;LETS LEARN NEW THINGS&lt;/h1&gt;

&lt;p&gt;So I know a few things. Maybe you want to learn a few things as well? These are all my suggestions on things worth learning.&lt;/p&gt;

&lt;h2 id=&quot;development&quot;&gt;Development&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Git is an open-source tool that allows people to seamlessly collaborate and exchange information and ideas in a controlled setting. Learning how to use this tool will take you far in this world.
– http://rogerdudler.github.io/git-guide/&lt;/li&gt;
  &lt;li&gt;Codecademy is a really easy way to understand the syntax of various languages. It won’t take you to professional-grade, nor will it help you get to the point where you can search your way through Stackoverflow for the solutions to your problems, but this is still a very good first step.
– http://codecademy.com&lt;/li&gt;
  &lt;li&gt;RubyMonk is an old way of teaching Ruby, and works as another tool beside Codecademy.
– https://rubymonk.com/&lt;/li&gt;
  &lt;li&gt;In order to be solid with programming, you need to understand &lt;em&gt;loops&lt;/em&gt;. This is one place to learn.
– http://www.learnpython.org/en/Loops&lt;/li&gt;
  &lt;li&gt;In order to be solid with programming, you also need to have a grasp on logic. &lt;em&gt;Khan Academy&lt;/em&gt; has a free curriculum to offer to everyone as well!
– https://www.khanacademy.org/computing/computer-programming/programming&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mapping&quot;&gt;Mapping&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Mapbox is my favorite tool for webmapping. I recommend you learn it if you’ve ever used the Google Maps API as it has much more functionality available to the common user.
– http://mapbox.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;design&quot;&gt;Design&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Typography is something that can set apart maps, web pages and the like.
– http://typographyhandbook.com/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;science-fiction-and-blogging&quot;&gt;Science Fiction and Blogging&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Jerry Pournelle is one of my favorite authours. If you want the reasoned arguments of someone you don’t agree with, this is where you go. Not only does he understand the science behind the topic of the day, his letter-writers also understand the problem as well.
– https://www.jerrypournelle.com/jerrypournelle.c/index.php&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 15 Jun 2016 00:00:00 -0400</pubDate>
        <link>brianbancroft.github.io/2016/06/15/my-bookmark-list.html</link>
        <guid isPermaLink="true">brianbancroft.github.io/2016/06/15/my-bookmark-list.html</guid>
        
        
      </item>
    
      <item>
        <title>Ellipsoid Thoughts</title>
        <description>&lt;p&gt;So for my first real post, I’d like to talk about ellipses. These are the bastard-children of circles that you learned about in High-School algebra. I’m going to start with the perfect parent, the circle. You know all what it looks like:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x^2 + y^2 = r^2&lt;/script&gt;

&lt;p&gt;An ellipse is similar, except instead of having a &lt;em&gt;radius&lt;/em&gt; as a variable, you have a &lt;em&gt;semi-major axis&lt;/em&gt; and a &lt;em&gt;semi-minor axis&lt;/em&gt; as two controlling variables:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Big(\frac{x}{a}\Big)^2 + \Big(\frac{y}{b}\Big)^2 = 1&lt;/script&gt;

&lt;p&gt;This can be useful, but what if we wanted something to actively draw the shape? We would use something called &lt;em&gt;parameterized functions&lt;/em&gt;. This is where you create one or more functions dependent on one variable: time. You do it in a circular fashion between zero and two-pi radians. And the number of functions would be dependent only on how many dimensions you wish to draw. If it’s a 2D canvass, you’re only concerned with the &lt;em&gt;x&lt;/em&gt; and the &lt;em&gt;y&lt;/em&gt;. Here’s an example of a parameterized equation for a circle:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
x&#39; = r\cos(t)\\
y&#39; = r\sin(t)\\
(\text{ for } 0 &lt; t &lt; 2\pi) %]]&gt;&lt;/script&gt;
</description>
        <pubDate>Wed, 15 Jun 2016 00:00:00 -0400</pubDate>
        <link>brianbancroft.github.io/2016/06/15/ellipsoid-thoughts.html</link>
        <guid isPermaLink="true">brianbancroft.github.io/2016/06/15/ellipsoid-thoughts.html</guid>
        
        
      </item>
    
  </channel>
</rss>
